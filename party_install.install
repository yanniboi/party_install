<?php
/**
 * @file
 * Enables modules and site configuration for a party site installation.
 */


/**
 * Implement hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function party_install_install() {
  include_once DRUPAL_ROOT . '/profiles/minimal/minimal.install';
  minimal_install();

  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');

/*  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);
  

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments', 'post comments', 'skip comment approval', $filtered_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
*/


  // Create a list of Profile2s to be used as Data Sets
  $profiles = array(
    'individual' => st('Individual'),
    'staff' => st('Staff'),
    'student' => st('Student'),
    'organisation' => st('Organisation'),
    'main' => st('Main'),
  );

  foreach ($profiles as $machine_name => $label) {
    if (!entity_load('profile2_type', array($machine_name))) {
      $type = entity_create('profile2_type', array(
        'type' => $machine_name,
        'label' => $label,
        'weight' => 0,
        'data' => array('registration' => FALSE, 'use_page' => FALSE),
      ));
      $type->save();
    }
  }

  // Create a default vocabulary named "Nationality", enabled for parties.
  $description = st('Use nationality to group parties of same nationality.');
  $help = st('Enter a comma-separated list of words to describe your content.');
  $vocabulary = (object) array(
    'name' => st('Nationality'),
    'description' => $description,
    'machine_name' => 'nationality',
    'help' => $help,

  );
  taxonomy_vocabulary_save($vocabulary);

  // Create Name field for Main profile2
  if (!field_info_field('field_main_name')) {
    $field = array(
      'field_name' => 'field_main_name',
      'type' => 'name',
      'type' => 'text'
    );
    $field = field_create_field($field);
  }
  // Attach newly created field to the profile2
  $instance = array(
    'field_name' => 'field_main_name',
    'entity_type' => 'profile2',
    'bundle' => 'main',
    'label' => 'Name',
    'description' => t('Name of the Party'),
    'settings' => array(
      'text_processing' => 0,
    ),
    'widget' => array('type' => 'name_widget'),
    'widget' => array('type' => 'text_textfield'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'name_formatter',
        'type' => 'text_plain',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'name_formatter',
        'type' => 'text_default',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create Address field for Main profile2
  if (!field_info_field('field_main_address')) {
    $field = array(
      'field_name' => 'field_main_address',
      'type' => 'text_long',
    );
    $field = field_create_field($field);
  }
  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_main_address',
    'entity_type' => 'profile2',
    'bundle' => 'main',
    'label' => 'Address',
    'description' => t('Address of the Party'),
    'settings' => array(
      'text_processing' => 0,
    ),
    'widget' => array('type' => 'text_textarea'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'above',
        'type' => 'text_plain',
      ),
      'party' => array(
        'label' => 'above',
        'type' => 'text_plain',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create Email field for Main profile2
  if (!field_info_field('field_main_email')) {
    $field = array(
      'field_name' => 'field_main_email',
      'type' => 'email',
    );
    $field = field_create_field($field);
  }

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_main_email',
    'entity_type' => 'profile2',
    'bundle' => 'main',
    'label' => 'Email',
    'description' => t('Email of the Party'),
    'widget' => array('type' => 'email_textfield'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'email_plain',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'email_plain',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create Gender field for Individual profile2
  if (!field_info_field('field_individual_gender')) {
    $field = array(
      'field_name' => 'field_individual_gender',
      'type' => 'list_text',
    );
    $field = field_create_field($field);
  }

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_individual_gender',
    'entity_type' => 'profile2',
    'bundle' => 'individual',
    'label' => 'Gender',
    'description' => t('Gender of the Individual'),
    'widget' => array('type' => 'options_select'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'list_default',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'list_default',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create Nationality field for Individual profile2
  if (!field_info_field('field_individual_nationality')) {
    $field = array(
      'field_name' => 'field_individual_nationality',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
     	'allowed_values' => array(
          array(
            'vocabulary' => 'nationality',
            'parent' => 0,
          ),
        ),
      ),
    );
    $field = field_create_field($field);
  }

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_individual_nationality',
    'entity_type' => 'profile2',
    'bundle' => 'individual',
    'label' => 'Nationality',
    'description' => t('Nationality of the Individual'),
    'widget' => array('type' => 'options_select'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'taxonomy_term_reference_plain',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'taxonomy_term_reference_link',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create Photo field for Individual profile2
  if (!field_info_field('field_individual_photo')) {
    $field = array(
      'field_name' => 'field_individual_photo',
      'type' => 'image',
    );
    $field = field_create_field($field);
  }

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_individual_photo',
    'entity_type' => 'profile2',
    'bundle' => 'individual',
    'label' => 'Photo',
    'description' => t('Photo of the Individual'),
    'widget' => array('type' => 'image_image'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'image',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create Photo field for Individual profile2
  $field = array(
    'field_name' => 'field_individual_date_of_birth',
    'type' => 'datetime',
  );
  $field = field_create_field($field);

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_individual_date_of_birth',
    'entity_type' => 'profile2',
    'bundle' => 'individual',
    'label' => 'Date of Birth',
    'description' => t('DoB of the Individual'),
    'widget' => array('type' => 'date_select'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'date_plain',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'date_default',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create Department field for Staff profile2
  $field = array(
    'field_name' => 'field_staff_department',
    'type' => 'list_text',
  );
  $field = field_create_field($field);

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_staff_department',
    'entity_type' => 'profile2',
    'bundle' => 'staff',
    'label' => 'Department',
    'description' => t('Department of the Staff member'),
    'widget' => array('type' => 'options_select'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'list_default',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'list_default',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create Salary field for Staff profile2
  $field = array(
    'field_name' => 'field_staff_salary',
    'type' => 'number_integer',
  );
  $field = field_create_field($field);
    
  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_staff_salary',
    'entity_type' => 'profile2',
    'bundle' => 'staff',
    'label' => 'Salary',
    'description' => t('Salary of the Staff member'),
    'widget' => array('type' => 'number'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'number_integer',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'number_integer',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create a Course field for Student profile2
  $field = array(
    'field_name' => 'field_student_course',
    'type' => 'list_text',
  );
  $field = field_create_field($field);

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_student_course',
    'entity_type' => 'profile2',
    'bundle' => 'student',
    'label' => 'Course',
    'description' => t('Course of the Student'),
    'widget' => array('type' => 'options_select'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'list_default',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'list_default',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create an Enrolled field for the Student profile2
  $field = array(
    'field_name' => 'field_student_enrolled',
    'type' => 'datetime',
  );
  $field = field_create_field($field);

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_student_enrolled',
    'entity_type' => 'profile2',
    'bundle' => 'student',
    'label' => 'Enrolled',
    'description' => t('Enrolled Date of the Student'),
    'widget' => array('type' => 'date_select'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'date_plain',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'date_default',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create a Primary Contact field for the Organisation profile2
  $field = array(
    'field_name' => 'field_organisation_contact',
    'type' => 'entityreference',
  );
  $field = field_create_field($field);

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_organisation_contact',
    'entity_type' => 'profile2',
    'bundle' => 'organisation',
    'label' => 'Primary Contact',
    'description' => t('Primary Contact for the Organisation'),
    'widget' => array('type' => 'entityreference_autocomplete'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'entityreference_label',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'entityreference_label',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create a Role field for the Organisation profile2
  $field = array(
    'field_name' => 'field_organisation_role',
    'type' => 'list_text',
  );
  $field = field_create_field($field);

  // Attach newly created fields to the Profile2
  $instance = array(
    'field_name' => 'field_organisation_role',
    'entity_type' => 'profile2',
    'bundle' => 'organisation',
    'label' => 'Role',
    'description' => t('Role of the Primary Contact for the Organisation'),
    'widget' => array('type' => 'options_select'),
    'weight' => 11,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'list_default',
      ),
      'party' => array(
        'label' => 'hidden',
        'type' => 'list_default',
      ),
    ),
  );
  $instance = field_create_instance($instance);

  // Create some hats
  $hat = entity_create('party_hat', array(
    'name' => 'individual', 
    'label' => 'Individual',
    'description' => 'The hat for Individuals',
    'parent' => '',
    'data' => array(
      'data_sets' => array(
        'profile2_individual' => array(
          'has' => 1,
          'multiple' => 0,
        ),
        'profile2_main' => array(
          'has' => 1,
          'multiple' => 0,
        ),
      ),
    ),
  ));
  $hat->save();

  $hat = entity_create('party_hat', array(
    'name' => 'organisation',
    'label' => 'Organisation',
    'description' => 'The hat for Organisations',
    'parent' => '',
    'data' => array(
      'data_sets' => array(
        'profile2_organisation' => array(
          'has' => 1,
          'multiple' => 0,
        ),
        'profile2_main' => array(
          'has' => 1,
          'multiple' => 0,
        ),
      ),
    ),
  ));
  $hat->save();

  $hat = entity_create('party_hat', array(
    'name' => 'staff',
    'label' => 'Staff',
    'description' => 'The hat for Staff members',
    'parent' => '',
    'data' => array(
      'data_sets' => array(
        'profile2_staff' => array(
          'has' => 1,
          'multiple' => 0,
        ),
      ),
    ),
  ));
  $hat->save();

  $hat = entity_create('party_hat', array(
    'name' => 'student',
    'label' => 'Student',
    'description' => 'The hat for Students',
    'parent' => '',
    'data' => array(
      'data_sets' => array(
        'profile2_student' => array(
          'has' => 1,
          'multiple' => 0,
        ),
      ),
    ),
  ));
  $hat->save();

  // Set Attached Entity Label Plugin to be top of the list.
  module_load_include('inc', 'party', 'party.admin');  
  $label_plugins = party_settings_get_party_label_plugins();

  foreach ($label_plugins as $path => $label_plugin) {
    $labels[$path] = array('weight' => '0');
  }

  $labels['attached_entity_field'] = array('weight' => '-1');
  variable_set('party_label_plugins', $labels);

}
